@page "/editor"
@using Aurigma.Design
@using Aurigma.Design.Math
@using ApiClient;
@using BlazorExtensions
@using BlazorViewer.Client.Models
@using Google.Protobuf

<PageTitle>Editor</PageTitle>

<h1>Editor</h1>

<div style="width: 400px; height: 400px">
    <DesignViewer Width="400" Height="400" ArtboardScrollMargin="@(new Sides(150))" @ref="_designViewer"></DesignViewer>
</div>

<EditForm Model="@_saveDesignModel" 
    OnValidSubmit="@HandleSaveDesignSubmitAsync" 
    OnInvalidSubmit="@HandleSaveDesignInvalidSubmit"
    style="margin: 1em">
    <InputText @bind-Value="_saveDesignModel.Name"/>

    <button type="submit">Save</button>

    <DataAnnotationsValidator/>
    <ValidationSummary/>
    
    <p>
        <label style="margin: 1em 0">@_saveFormMessage</label>
    </p>
</EditForm>

@code {
    private IDesignViewer _designViewer;
    private IDesignsApiClient _designsApiClient;
    private SaveDesignModel _saveDesignModel = new();

    private const string ErrorMessage = "An error has occured";
    private const string SaveMessage = "File \"{0}\" has been successfully saved";
    private const string UpdateMessage = "File \"{0}\" has been successfully updated";

    private string _saveFormMessage = "";

    protected override async Task OnInitializedAsync()
    {
        _designsApiClient = new DesignsApiClient("https://localhost:7091", new HttpClient());

        string name = "aaaaa";
        var response = await _designsApiClient.GetDesignContentAsync(name);
        Design design = Design.Parser.ParseFrom(response.Stream);

        _designViewer.Design = design;
        _designViewer.CurrentSurfaceIndex = 0;

        base.OnInitialized();
    }

    private async Task HandleSaveDesignSubmitAsync()
    {
        try
        {
            var designStream = new MemoryStream();
            _designViewer.Design.WriteTo(designStream);
            designStream.Position = 0;
            var designFile = new FileParameter(designStream);

            DesignDto result;

            if(string.IsNullOrEmpty(_saveDesignModel.Name))
            {
                result = await _designsApiClient.UploadDesignAutoNameAsync(designFile);
                _saveFormMessage = string.Format(SaveMessage, result.Name);
                return;
            }

            var designs = await _designsApiClient.ListDesignsAsync();
            var designNames = designs.Select(x => x.Name);
            if (designNames.Contains(_saveDesignModel.Name))
            {
                result = await _designsApiClient.UpdateDesignAsync(_saveDesignModel.Name, designFile);
                _saveFormMessage = string.Format(UpdateMessage, result.Name);
                return;
            }

            result = await _designsApiClient.UploadDesignAsync(_saveDesignModel.Name, designFile);
            _saveFormMessage = string.Format(SaveMessage, result.Name);
        }
        catch
        {
            _saveFormMessage = ErrorMessage;
        }
    }

    private void HandleSaveDesignInvalidSubmit()
    {
        _saveFormMessage = "";
    }
}
